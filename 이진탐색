이진 탐색이란?
이진 탐색은 정렬된 배열에서 원하는 값을 찾는 효율적인 알고리즘으로
배열의 중간 값을 선택한 후, 탐색하려는 값이 중간 값보다 크면 오른쪽 절반만, 작으면 왼쪽 절반만을 탐색하는 방식을 반복한다

이진 탐색의 과정:
배열의 중간 요소 찾기
중간 요소가 찾고자 하는 값과 같으면 탐색을 종료
중간 요소가 찾고자 하는 값보다 크면 배열의 왼쪽 절반을 탐색
중간 요소가 찾고자 하는 값보다 작으면 배열의 오른쪽 절반을 탐색
이 과정을 반복하며 배열의 크기가 0이 되면, 값이 배열에 없다고 판단

#include <stdio.h>

int binary_search(int arr[], int size, int target) {
    int low = 0;
    int high = size - 1;

    while (low <= high) {
        int mid = (low + high) / 2;

        if (arr[mid] == target) {
            return mid; // 찾은 경우 인덱스 반환
        } else if (arr[mid] < target) {
            low = mid + 1; // 오른쪽 절반 탐색
        } else {
            high = mid - 1; // 왼쪽 절반 탐색
        }
    }

    return -1; // 찾지 못한 경우 -1 반환
}

int main() {
    int arr[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};
    int size = sizeof(arr) / sizeof(arr[0]);
    int target;
    scanf("%d", &target);
    int result = binary_search(arr, size, target);
    if (result != -1) {
        printf("%d", result);
    }
    return 0;
}
